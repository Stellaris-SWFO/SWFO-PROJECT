namespace = starkiller

#Speech after Starkiller construction is finished
country_event = {
	id = starkiller.0
	is_triggered_only = yes
	hide_window = yes
	immediate = {
		if = { 
			limit = {
				NOT = {
					has_country_flag = nomorespeech
				}
			}
			play_sound = swfo_starkillerbase_completed_speech
		}
	}
}

#Trigger Sun drain - Starkiller Charge
country_event = {
	id = starkiller.1
	show_sound = event_sensor_ping
	hide_window = yes
	is_triggered_only = yes
	
	immediate = {
		country_event = { id = starkiller.2 days = 30 }
		set_country_flag = nomorespeech
		every_megastructure = {
			limit = {
				exists = this
				is_megastructure_type = swfo_starkillerbase_2
			}
			remove_megastructure = this
		}
		event_target:sun_target_system = {
			spawn_megastructure = { 
				type = "swfo_sun_drain" 
				location = event_target:sun_location01 
			}
			spawn_megastructure = { 
				type = "swfo_starkillerbase_a" 
				location = event_target:starkillerbase_location01
			}
		}
		play_sound = swfo_starkillerbase_charge
		every_country = {
			limit = {
				NOT = { is_country_type = primitive }
				NOT = { is_country = ROOT }
			}
			add_opinion_modifier = { 
				who = ROOT 
				modifier = opinion_in_starkillerbase_fire_control 
			}
		}
	}
}
#Remove Sun drain
country_event = {
	id = starkiller.2
	hide_window = yes
	is_triggered_only = yes
	
	immediate = {
		country_event = { id = starkiller.3 days = 1 }
		#Remove Sun drain
		every_megastructure = {
			limit = {
				exists = this
				is_megastructure_type = swfo_sun_drain
			}
			remove_megastructure = this
		}	
	}
}
#Spawn Wormhole over Target Planet
country_event = {
	id = starkiller.3
	hide_window = yes
	is_triggered_only = yes
	
	immediate = {
		country_event = { id = starkiller.4 days = 12 }
		play_sound = swfo_starkillerbase_fire
		every_megastructure = {
			limit = {
				exists = this
				is_megastructure_type = starkiller_planet_target_marker_0
			}
			upgrade_megastructure_to = starkiller_planet_target_marker_1
		}
	}
}
#Fire Starkiller Base
country_event = {
	id = starkiller.4
	hide_window = yes
	is_triggered_only = yes
	
	immediate = {
		country_event = { id = starkiller.5 days = 10 }
		every_megastructure = {
			limit = {
				exists = this
				is_megastructure_type = swfo_starkillerbase_a
			}
			remove_megastructure = this
		}
		event_target:sun_target_system = {
			spawn_megastructure = { 
				type = "swfo_starkillerbase_2" 
				location = event_target:starkillerbase_location01
			}
		}
	}
}


#Spawn Wormhole with Beam over Target Planet	#Destroy Target Planet
country_event = {
	id = starkiller.5
	hide_window = yes
	is_triggered_only = yes
	
	immediate = {
		country_event = { id = starkiller.6 days = 13 }
		every_megastructure = {
			if = {
				limit = {
					exists = this
					is_megastructure_type = starkiller_planet_target_marker_1
				}
				upgrade_megastructure_to = starkiller_planet_target_marker_2
			}
		}
		every_planet = {
			if = {
				limit = {
					#Limit to Target Planet
					has_planet_flag = built_target
					FO_is_destroyed_planet = yes
				}
				solar_system = {
					every_fleet_in_system = { destroy_fleet = this }
				}
				owner = {
					add_static_war_exhaustion={
						attacker = from
						location = prev
						value_for_planet_destruction = 1
					 }	
				}
				change_pc = pc_shattered
				#every_owned_pop = {
				#	kill_pop = yes
				#}
			}
			if = {
				limit = {
					has_planet_flag = built_target
					FO_is_ringworld = yes
				}
				solar_system = {
					every_fleet_in_system = { destroy_fleet = this }
				}
				owner = {
					add_static_war_exhaustion={
						attacker = from
						location = prev
						value_for_planet_destruction = 1
					}	
				}
				remove_planet = yes
			}
			if = {
				limit = {
					has_planet_flag = built_target
				}
				solar_system = {
					if = {
						limit = {
							NOT = { has_star_flag = target_system_temp }
						}
						set_timed_star_flag = {
							flag = target_system_temp
							days = 2	
						}
						if = {
							limit = {
								exists = space_owner
								space_owner = {
									OR = {
										is_country_type = ai_empire
									}
								}
							}			
							every_country = {
								limit = {
									NOT = { is_country_type = primitive }
									NOT = { is_country = ROOT }
								}
								remove_opinion_modifier = { 
									who = ROOT 
									modifier = opinion_in_starkillerbase_fire_control 
								}
							}
						}
						else = {
							every_country = {
								limit = {
									NOT = { is_country_type = primitive }
									NOT = { is_country = ROOT }
								}
								remove_opinion_modifier = { 
									who = ROOT 
									modifier = opinion_in_starkillerbase_fire_control 
								}
								add_opinion_modifier = { 
									who = ROOT 
									modifier = opinion_starkillerbase_broke_our_system_planet 
								}
							}	
						}
					}
				}
			}	
		}			
	}
}


#Reset
country_event = {
	id = starkiller.6
	hide_window = yes
	is_triggered_only = yes
	
	immediate = {
		#Delete Target Marker
		every_megastructure = {
			if = {
				limit = {
					exists = this
					is_megastructure_type = starkiller_planet_target_marker_2
				}
				remove_megastructure = this
			}
			#Removes Firing Effect
			if = {
				limit = {
					exists = this
					is_megastructure_type = swfo_starkillerbase_2
				}
				remove_megastructure = this
			}
		}
		every_planet = {
			if = {
				limit = {
					has_planet_flag = buildingsoon
				}
				save_event_target_as = buildtargetsoon
			}
			if = {
				limit = {
					has_planet_flag = built_target
				}
				remove_planet_flag = built_target
			}
		}
		#rebuilts Starkiller Base
		event_target:sun_target_system = {
			spawn_megastructure = { 
				type = "swfo_starkillerbase_1" 
				location = event_target:buildtargetsoon
				owner = space_owner
			}
		}
		#reset variable
		event_target:starkillerbase_location01 = {
			set_variable = {
				which = num_targets
				value = 0
			}
		}
	}
}